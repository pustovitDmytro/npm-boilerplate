defaults: &defaults
  resource_class: small
  docker:
    - image: circleci/node:14
cache-defaults: &cache-defaults
  keys:
    - -{{ checksum "package-lock.json" }}

parameters:
  env-tests:
    type: boolean
    default: false

aliases:
  - &danger-pr
    name: Run danger
    command: npx danger ci -d .dangerfile.js
  - &coveralls
    name: Upload to coveralls
    command: npm run coveralls
  - &coverage
    name: Test Coverage
    command: npm run test:coverage -- --reporter mocha-junit-reporter --reporter-options mochaFile=reports/test-results/mocha/test-results.xml
  - &lint
    name: JavaScript Linter
    command: npm run test:lint -- --format junit --output-file ./reports/test-results/eslint/eslint.xml
  - &debt
    name: Technical Debt
    command: npm run test:debt
  - &test-package
    name: Test packed app
    command: npm run test:package
  - &security
    name: Validate dependencies
    command: npm run test:security
  - &install
    name: Installing Dependencies
    command: npm ci
  - &cache-modules
    key: -{{ checksum "package-lock.json" }}
    paths:
      - ~/.npm
      - node_modules
      - lib

version: 2.1
debug: true
jobs:
  danger-pr:
    <<: *defaults
    environment:
      DANGER_GITHUB_API_TOKEN: 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
    steps:
      - checkout
      - run: echo "DANGER_GITHUB_API_TOKEN=$DANGER_GITHUB_API_TOKEN"
      - run: *install
      - run: *danger-pr
      
  install:
    <<: *defaults
    steps:
      - checkout
      - run: *install
      - run: *security
      - save_cache: *cache-modules
  tests:
    <<: *defaults
    steps:
      - checkout
      - restore_cache:
          <<: *cache-defaults
      - run: *lint
      - run: *debt
      - run: *coverage
      - store_test_results:
          path: reports/test-results
      - store_artifacts:
          path: reports
      - store_artifacts:
          path: tmp/tests
      - run: *coveralls
  test-package:
    <<: *defaults
    steps:
      - checkout
      - restore_cache:
          <<: *cache-defaults
      - run: *test-package
      - store_artifacts:
          path: tmp          
  deploy:
    <<: *defaults
    steps:
        - checkout
        - restore_cache:
            <<: *cache-defaults
        - run:
            name: Create Release
            command: npm run semantic-release

workflows:
  version: 2
  # main:
  #   jobs:
  #     - install
  #     - tests:
  #         requires:
  #           - install
  #     - test-package:
  #         requires:
  #           - install
  #     - deploy:
  #         requires:
  #           - tests
  #           - test-package
  #         filters:
  #           branches:
  #               only: master
  pr:
    # filters:
    #     branches:
    #       only: /pull\/[0-9]+/
    jobs:
      - danger-pr
  env-tests:
    when: << pipeline.parameters.env-tests >>
    jobs:
      - install
